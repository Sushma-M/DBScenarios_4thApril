/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * CountryRegionM2oFromSp generated by hbm2java
 */
@Entity
@Table(name="`CountryRegion_M2O_FromSP`"
)

public class CountryRegionM2oFromSp  implements java.io.Serializable {

    
    private String countryRegionCode;
    
    private String name;
    
    
    @Type(type="DateTime")
    private LocalDateTime modifiedDate;
    
    private Set<StateProvinceM2oAddress> stateProvinceM2oAddresses = new HashSet<StateProvinceM2oAddress>(0);

    public CountryRegionM2oFromSp() {
    }


    @Id 
    

    @Column(name="`CountryRegionCode`")
    public String getCountryRegionCode() {
        return this.countryRegionCode;
    }
    
    public void setCountryRegionCode(String countryRegionCode) {
        this.countryRegionCode = countryRegionCode;
    }

    

    @Column(name="`Name`")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    

    @Column(name="`ModifiedDate`")
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="countryRegionM2oFromSp")
    public Set<StateProvinceM2oAddress> getStateProvinceM2oAddresses() {
        return this.stateProvinceM2oAddresses;
    }
    
    public void setStateProvinceM2oAddresses(Set<StateProvinceM2oAddress> stateProvinceM2oAddresses) {
        this.stateProvinceM2oAddresses = stateProvinceM2oAddresses;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof CountryRegionM2oFromSp) )
		    return false;

		 CountryRegionM2oFromSp that = (CountryRegionM2oFromSp) o;

		 return ( (this.getCountryRegionCode()==that.getCountryRegionCode()) || ( this.getCountryRegionCode()!=null && that.getCountryRegionCode()!=null && this.getCountryRegionCode().equals(that.getCountryRegionCode()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getCountryRegionCode() == null ? 0 : this.getCountryRegionCode().hashCode() );

         return result;
    }


}

