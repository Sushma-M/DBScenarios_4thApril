/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * CompositesKeyRelations generated by hbm2java
 */
@Entity
@Table(name="`CompositesKeyRelations`"
)
@IdClass(value=CompositesKeyRelationsId.class)
public class CompositesKeyRelations  implements java.io.Serializable {

    
    private Integer businessEntityId;
    
    private Short shiftId;
    
    private Short departmentId;
    
    private Date startDate;
    
    private Date endDate;
    
    private DepartmentCompositeParent departmentCompositeParent;
    
    private EmployeeRelationFrom2tables employeeRelationFrom2tables;
    
    private Shift2rM2ovirtualParentForDepartment shift2rM2ovirtualParentForDepartment;

    public CompositesKeyRelations() {
    }


    @Id 
    

    @Column(name="`BusinessEntityID`", insertable=false, updatable=false, precision=10)
    public Integer getBusinessEntityId() {
        return this.businessEntityId;
    }
    
    public void setBusinessEntityId(Integer businessEntityId) {
        this.businessEntityId = businessEntityId;
    }
    @Id 
    

    @Column(name="`ShiftID`", insertable=false, updatable=false, precision=5)
    public Short getShiftId() {
        return this.shiftId;
    }
    
    public void setShiftId(Short shiftId) {
        this.shiftId = shiftId;
    }
    @Id 
    

    @Column(name="`DepartmentID`", insertable=false, updatable=false, precision=5)
    public Short getDepartmentId() {
        return this.departmentId;
    }
    
    public void setDepartmentId(Short departmentId) {
        this.departmentId = departmentId;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`StartDate`", length=10)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`EndDate`", length=10)
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`DepartmentID`", insertable=false, updatable=false)
    public DepartmentCompositeParent getDepartmentCompositeParent() {
        return this.departmentCompositeParent;
    }
    
    public void setDepartmentCompositeParent(DepartmentCompositeParent departmentCompositeParent) {
        
        this.departmentId = departmentCompositeParent.getDepartmentId();
      
        this.departmentCompositeParent = departmentCompositeParent;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`BusinessEntityID`", insertable=false, updatable=false)
    public EmployeeRelationFrom2tables getEmployeeRelationFrom2tables() {
        return this.employeeRelationFrom2tables;
    }
    
    public void setEmployeeRelationFrom2tables(EmployeeRelationFrom2tables employeeRelationFrom2tables) {
        
        this.businessEntityId = employeeRelationFrom2tables.getBusinessEntityId();
      
        this.employeeRelationFrom2tables = employeeRelationFrom2tables;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`ShiftID`", insertable=false, updatable=false)
    public Shift2rM2ovirtualParentForDepartment getShift2rM2ovirtualParentForDepartment() {
        return this.shift2rM2ovirtualParentForDepartment;
    }
    
    public void setShift2rM2ovirtualParentForDepartment(Shift2rM2ovirtualParentForDepartment shift2rM2ovirtualParentForDepartment) {
        
        this.shiftId = shift2rM2ovirtualParentForDepartment.getShiftId();
      
        this.shift2rM2ovirtualParentForDepartment = shift2rM2ovirtualParentForDepartment;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof CompositesKeyRelations) )
		    return false;

		 CompositesKeyRelations that = (CompositesKeyRelations) o;

         return ( (this.getBusinessEntityId()==that.getBusinessEntityId()) || ( this.getBusinessEntityId()!=null && that.getBusinessEntityId()!=null && this.getBusinessEntityId().equals(that.getBusinessEntityId()) ) )
 && ( (this.getShiftId()==that.getShiftId()) || ( this.getShiftId()!=null && that.getShiftId()!=null && this.getShiftId().equals(that.getShiftId()) ) )
 && ( (this.getDepartmentId()==that.getDepartmentId()) || ( this.getDepartmentId()!=null && that.getDepartmentId()!=null && this.getDepartmentId().equals(that.getDepartmentId()) ) )
 && ( (this.getStartDate()==that.getStartDate()) || ( this.getStartDate()!=null && that.getStartDate()!=null && this.getStartDate().equals(that.getStartDate()) ) )
 && ( (this.getEndDate()==that.getEndDate()) || ( this.getEndDate()!=null && that.getEndDate()!=null && this.getEndDate().equals(that.getEndDate()) ) )
 && ( (this.getDepartmentCompositeParent()==that.getDepartmentCompositeParent()) || ( this.getDepartmentCompositeParent()!=null && that.getDepartmentCompositeParent()!=null && this.getDepartmentCompositeParent().equals(that.getDepartmentCompositeParent()) ) )
 && ( (this.getEmployeeRelationFrom2tables()==that.getEmployeeRelationFrom2tables()) || ( this.getEmployeeRelationFrom2tables()!=null && that.getEmployeeRelationFrom2tables()!=null && this.getEmployeeRelationFrom2tables().equals(that.getEmployeeRelationFrom2tables()) ) )
 && ( (this.getShift2rM2ovirtualParentForDepartment()==that.getShift2rM2ovirtualParentForDepartment()) || ( this.getShift2rM2ovirtualParentForDepartment()!=null && that.getShift2rM2ovirtualParentForDepartment()!=null && this.getShift2rM2ovirtualParentForDepartment().equals(that.getShift2rM2ovirtualParentForDepartment()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getBusinessEntityId() == null ? 0 : this.getBusinessEntityId().hashCode() );
         result = 37 * result + ( getShiftId() == null ? 0 : this.getShiftId().hashCode() );
         result = 37 * result + ( getDepartmentId() == null ? 0 : this.getDepartmentId().hashCode() );
         result = 37 * result + ( getStartDate() == null ? 0 : this.getStartDate().hashCode() );
         result = 37 * result + ( getEndDate() == null ? 0 : this.getEndDate().hashCode() );
         result = 37 * result + ( getDepartmentCompositeParent() == null ? 0 : this.getDepartmentCompositeParent().hashCode() );
         result = 37 * result + ( getEmployeeRelationFrom2tables() == null ? 0 : this.getEmployeeRelationFrom2tables().hashCode() );
         result = 37 * result + ( getShift2rM2ovirtualParentForDepartment() == null ? 0 : this.getShift2rM2ovirtualParentForDepartment().hashCode() );

         return result;
    }


}

