/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * PersonPhoneO2oM2o generated by hbm2java
 */
@Entity
@Table(name="`PersonPhone_O2O_M2O`"
)

public class PersonPhoneO2oM2o  implements java.io.Serializable {

    
    private Integer phoneNumberTypeId;
    
    private String phoneNumber;
    
    
    @Type(type="DateTime")
    private LocalDateTime modifiedDate;
    
    private EmployeeRelationFrom2tables employeeRelationFrom2tables;
    
    private PhoneNumberTypeO2oPersonPhone phoneNumberTypeO2oPersonPhone;

    public PersonPhoneO2oM2o() {
    }


    @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="phoneNumberTypeO2oPersonPhone"))@Id @GeneratedValue(generator="generator")
    

    @Column(name="`PhoneNumberTypeID`", precision=10)
    public Integer getPhoneNumberTypeId() {
        return this.phoneNumberTypeId;
    }
    
    public void setPhoneNumberTypeId(Integer phoneNumberTypeId) {
        this.phoneNumberTypeId = phoneNumberTypeId;
    }

    

    @Column(name="`PhoneNumber`")
    public String getPhoneNumber() {
        return this.phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    

    @Column(name="`ModifiedDate`")
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`BusinessEntityID`")
    public EmployeeRelationFrom2tables getEmployeeRelationFrom2tables() {
        return this.employeeRelationFrom2tables;
    }
    
    public void setEmployeeRelationFrom2tables(EmployeeRelationFrom2tables employeeRelationFrom2tables) {
        this.employeeRelationFrom2tables = employeeRelationFrom2tables;
    }

    @OneToOne(fetch=FetchType.EAGER) @PrimaryKeyJoinColumn
    public PhoneNumberTypeO2oPersonPhone getPhoneNumberTypeO2oPersonPhone() {
        return this.phoneNumberTypeO2oPersonPhone;
    }
    
    public void setPhoneNumberTypeO2oPersonPhone(PhoneNumberTypeO2oPersonPhone phoneNumberTypeO2oPersonPhone) {
        this.phoneNumberTypeO2oPersonPhone = phoneNumberTypeO2oPersonPhone;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof PersonPhoneO2oM2o) )
		    return false;

		 PersonPhoneO2oM2o that = (PersonPhoneO2oM2o) o;

		 return ( (this.getPhoneNumberTypeId()==that.getPhoneNumberTypeId()) || ( this.getPhoneNumberTypeId()!=null && that.getPhoneNumberTypeId()!=null && this.getPhoneNumberTypeId().equals(that.getPhoneNumberTypeId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getPhoneNumberTypeId() == null ? 0 : this.getPhoneNumberTypeId().hashCode() );

         return result;
    }


}

