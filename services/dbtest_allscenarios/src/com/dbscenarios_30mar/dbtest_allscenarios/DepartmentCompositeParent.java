/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * DepartmentCompositeParent generated by hbm2java
 */
@Entity
@Table(name="`Department_Composite_Parent`"
)

public class DepartmentCompositeParent  implements java.io.Serializable {

    
    private Short departmentId;
    
    private String name;
    
    private String groupName;
    
    private Short shift;
    
    private Set<CompositesKeyRelations> compositesKeyRelationses = new HashSet<CompositesKeyRelations>(0);

    public DepartmentCompositeParent() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`DepartmentID`", precision=5)
    public Short getDepartmentId() {
        return this.departmentId;
    }
    
    public void setDepartmentId(Short departmentId) {
        this.departmentId = departmentId;
    }

    

    @Column(name="`Name`")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    

    @Column(name="`GroupName`")
    public String getGroupName() {
        return this.groupName;
    }
    
    public void setGroupName(String groupName) {
        this.groupName = groupName;
    }

    

    @Column(name="`Shift`", precision=5)
    public Short getShift() {
        return this.shift;
    }
    
    public void setShift(Short shift) {
        this.shift = shift;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="departmentCompositeParent")
    public Set<CompositesKeyRelations> getCompositesKeyRelationses() {
        return this.compositesKeyRelationses;
    }
    
    public void setCompositesKeyRelationses(Set<CompositesKeyRelations> compositesKeyRelationses) {
        this.compositesKeyRelationses = compositesKeyRelationses;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof DepartmentCompositeParent) )
		    return false;

		 DepartmentCompositeParent that = (DepartmentCompositeParent) o;

		 return ( (this.getDepartmentId()==that.getDepartmentId()) || ( this.getDepartmentId()!=null && that.getDepartmentId()!=null && this.getDepartmentId().equals(that.getDepartmentId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getDepartmentId() == null ? 0 : this.getDepartmentId().hashCode() );

         return result;
    }


}

