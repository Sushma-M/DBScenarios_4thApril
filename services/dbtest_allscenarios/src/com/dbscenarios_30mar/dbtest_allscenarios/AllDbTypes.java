/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * AllDbTypes generated by hbm2java
 */
@Entity
@Table(name="`All DB Types`"
)

public class AllDbTypes  implements java.io.Serializable {

    
    private Integer id;
    
    private Byte byteCol;
    
    private Short shortCol;
    
    private Integer intCol;
    
    private BigInteger longCol;
    
    private BigInteger bigIntCol;
    
    private Double floatCol;
    
    private Double doubleCol;
    
    private BigDecimal bigDecCol;
    
    private Character charCol;
    
    private String stringCol;
    
    private String clobCol;
    
    private String textCol;
    
    private Date dateCol;
    
    
    @Type(type="DateTime")
    private LocalDateTime dateTimeCol;
    
    private Date timeCol;
    
    private Date timeStampCol;
    
    private Boolean booleanCol;
    
    private byte[] blobCol;

    public AllDbTypes() {
    }


    @Id 
    

    @Column(name="`ID`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    

    @Column(name="`Byte Col`", precision=2)
    public Byte getByteCol() {
        return this.byteCol;
    }
    
    public void setByteCol(Byte byteCol) {
        this.byteCol = byteCol;
    }

    

    @Column(name="`Short Col`", precision=5)
    public Short getShortCol() {
        return this.shortCol;
    }
    
    public void setShortCol(Short shortCol) {
        this.shortCol = shortCol;
    }

    

    @Column(name="`Int Col`", precision=10)
    public Integer getIntCol() {
        return this.intCol;
    }
    
    public void setIntCol(Integer intCol) {
        this.intCol = intCol;
    }

    

    @Column(name="`Long Col`", precision=20)
    public BigInteger getLongCol() {
        return this.longCol;
    }
    
    public void setLongCol(BigInteger longCol) {
        this.longCol = longCol;
    }

    

    @Column(name="`BigInt Col`", precision=20)
    public BigInteger getBigIntCol() {
        return this.bigIntCol;
    }
    
    public void setBigIntCol(BigInteger bigIntCol) {
        this.bigIntCol = bigIntCol;
    }

    

    @Column(name="`Float Col`", precision=12, scale=4)
    public Double getFloatCol() {
        return this.floatCol;
    }
    
    public void setFloatCol(Double floatCol) {
        this.floatCol = floatCol;
    }

    

    @Column(name="`Double Col`", precision=18, scale=8)
    public Double getDoubleCol() {
        return this.doubleCol;
    }
    
    public void setDoubleCol(Double doubleCol) {
        this.doubleCol = doubleCol;
    }

    

    @Column(name="`BigDec Col`", precision=35, scale=15)
    public BigDecimal getBigDecCol() {
        return this.bigDecCol;
    }
    
    public void setBigDecCol(BigDecimal bigDecCol) {
        this.bigDecCol = bigDecCol;
    }

    

    @Column(name="`Char Col`", length=1)
    public Character getCharCol() {
        return this.charCol;
    }
    
    public void setCharCol(Character charCol) {
        this.charCol = charCol;
    }

    

    @Column(name="`String Col`")
    public String getStringCol() {
        return this.stringCol;
    }
    
    public void setStringCol(String stringCol) {
        this.stringCol = stringCol;
    }

    

    @Column(name="`Clob Col`", length=500)
    public String getClobCol() {
        return this.clobCol;
    }
    
    public void setClobCol(String clobCol) {
        this.clobCol = clobCol;
    }

    

    @Column(name="`Text Col`", length=600)
    public String getTextCol() {
        return this.textCol;
    }
    
    public void setTextCol(String textCol) {
        this.textCol = textCol;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`Date Col`", length=10)
    public Date getDateCol() {
        return this.dateCol;
    }
    
    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    

    @Column(name="`DateTime Col`")
    public LocalDateTime getDateTimeCol() {
        return this.dateTimeCol;
    }
    
    public void setDateTimeCol(LocalDateTime dateTimeCol) {
        this.dateTimeCol = dateTimeCol;
    }

    @Temporal(TemporalType.TIME)

    @Column(name="`Time Col`", length=8)
    public Date getTimeCol() {
        return this.timeCol;
    }
    
    public void setTimeCol(Date timeCol) {
        this.timeCol = timeCol;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`TimeStamp Col`", length=19)
    public Date getTimeStampCol() {
        return this.timeStampCol;
    }
    
    public void setTimeStampCol(Date timeStampCol) {
        this.timeStampCol = timeStampCol;
    }

    

    @Column(name="`Boolean Col`")
    public Boolean getBooleanCol() {
        return this.booleanCol;
    }
    
    public void setBooleanCol(Boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    

    @Column(name="`Blob Col`")
    public byte[] getBlobCol() {
        return this.blobCol;
    }
    
    public void setBlobCol(byte[] blobCol) {
        this.blobCol = blobCol;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof AllDbTypes) )
		    return false;

		 AllDbTypes that = (AllDbTypes) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

