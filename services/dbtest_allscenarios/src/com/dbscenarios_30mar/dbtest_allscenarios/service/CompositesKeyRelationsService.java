/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.dbtest_allscenarios.*;

/**
 * Service object for domain model class CompositesKeyRelations.
 * @see com.dbscenarios_30mar.dbtest_allscenarios.CompositesKeyRelations
 */

public interface CompositesKeyRelationsService {
   /**
	 * Creates a new compositeskeyrelations.
	 * 
	 * @param created
	 *            The information of the created compositeskeyrelations.
	 * @return The created compositeskeyrelations.
	 */
	public CompositesKeyRelations create(CompositesKeyRelations created);

	/**
	 * Deletes a compositeskeyrelations.
	 * 
	 * @param compositeskeyrelationsId
	 *            The id of the deleted compositeskeyrelations.
	 * @return The deleted compositeskeyrelations.
	 * @throws EntityNotFoundException
	 *             if no compositeskeyrelations is found with the given id.
	 */
	public CompositesKeyRelations delete(CompositesKeyRelationsId compositeskeyrelationsId) throws EntityNotFoundException;

	/**
	 * Finds all compositeskeyrelationss.
	 * 
	 * @return A list of compositeskeyrelationss.
	 */
	public Page<CompositesKeyRelations> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<CompositesKeyRelations> findAll(Pageable pageable);
	
	/**
	 * Finds compositeskeyrelations by id.
	 * 
	 * @param id
	 *            The id of the wanted compositeskeyrelations.
	 * @return The found compositeskeyrelations. If no compositeskeyrelations is found, this method returns
	 *         null.
	 */
	public CompositesKeyRelations findById(CompositesKeyRelationsId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a compositeskeyrelations.
	 * 
	 * @param updated
	 *            The information of the updated compositeskeyrelations.
	 * @return The updated compositeskeyrelations.
	 * @throws EntityNotFoundException
	 *             if no compositeskeyrelations is found with given id.
	 */
	public CompositesKeyRelations update(CompositesKeyRelations updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the compositeskeyrelationss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the compositeskeyrelations.
	 */

	public long countAll();


    public Page<CompositesKeyRelations> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

