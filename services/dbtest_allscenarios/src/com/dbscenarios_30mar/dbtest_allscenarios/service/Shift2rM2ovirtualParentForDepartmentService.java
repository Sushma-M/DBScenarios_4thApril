/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.dbtest_allscenarios.*;

/**
 * Service object for domain model class Shift2rM2ovirtualParentForDepartment.
 * @see com.dbscenarios_30mar.dbtest_allscenarios.Shift2rM2ovirtualParentForDepartment
 */

public interface Shift2rM2ovirtualParentForDepartmentService {
   /**
	 * Creates a new shift2rm2ovirtualparentfordepartment.
	 * 
	 * @param created
	 *            The information of the created shift2rm2ovirtualparentfordepartment.
	 * @return The created shift2rm2ovirtualparentfordepartment.
	 */
	public Shift2rM2ovirtualParentForDepartment create(Shift2rM2ovirtualParentForDepartment created);

	/**
	 * Deletes a shift2rm2ovirtualparentfordepartment.
	 * 
	 * @param shift2rm2ovirtualparentfordepartmentId
	 *            The id of the deleted shift2rm2ovirtualparentfordepartment.
	 * @return The deleted shift2rm2ovirtualparentfordepartment.
	 * @throws EntityNotFoundException
	 *             if no shift2rm2ovirtualparentfordepartment is found with the given id.
	 */
	public Shift2rM2ovirtualParentForDepartment delete(Short shift2rm2ovirtualparentfordepartmentId) throws EntityNotFoundException;

	/**
	 * Finds all shift2rm2ovirtualparentfordepartments.
	 * 
	 * @return A list of shift2rm2ovirtualparentfordepartments.
	 */
	public Page<Shift2rM2ovirtualParentForDepartment> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Shift2rM2ovirtualParentForDepartment> findAll(Pageable pageable);
	
	/**
	 * Finds shift2rm2ovirtualparentfordepartment by id.
	 * 
	 * @param id
	 *            The id of the wanted shift2rm2ovirtualparentfordepartment.
	 * @return The found shift2rm2ovirtualparentfordepartment. If no shift2rm2ovirtualparentfordepartment is found, this method returns
	 *         null.
	 */
	public Shift2rM2ovirtualParentForDepartment findById(Short id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a shift2rm2ovirtualparentfordepartment.
	 * 
	 * @param updated
	 *            The information of the updated shift2rm2ovirtualparentfordepartment.
	 * @return The updated shift2rm2ovirtualparentfordepartment.
	 * @throws EntityNotFoundException
	 *             if no shift2rm2ovirtualparentfordepartment is found with given id.
	 */
	public Shift2rM2ovirtualParentForDepartment update(Shift2rM2ovirtualParentForDepartment updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the shift2rm2ovirtualparentfordepartments in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the shift2rm2ovirtualparentfordepartment.
	 */

	public long countAll();


    public Page<Shift2rM2ovirtualParentForDepartment> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

