/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.dbtest_allscenarios.*;

/**
 * Service object for domain model class DepartmentCompositeParent.
 * @see com.dbscenarios_30mar.dbtest_allscenarios.DepartmentCompositeParent
 */

public interface DepartmentCompositeParentService {
   /**
	 * Creates a new departmentcompositeparent.
	 * 
	 * @param created
	 *            The information of the created departmentcompositeparent.
	 * @return The created departmentcompositeparent.
	 */
	public DepartmentCompositeParent create(DepartmentCompositeParent created);

	/**
	 * Deletes a departmentcompositeparent.
	 * 
	 * @param departmentcompositeparentId
	 *            The id of the deleted departmentcompositeparent.
	 * @return The deleted departmentcompositeparent.
	 * @throws EntityNotFoundException
	 *             if no departmentcompositeparent is found with the given id.
	 */
	public DepartmentCompositeParent delete(Short departmentcompositeparentId) throws EntityNotFoundException;

	/**
	 * Finds all departmentcompositeparents.
	 * 
	 * @return A list of departmentcompositeparents.
	 */
	public Page<DepartmentCompositeParent> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<DepartmentCompositeParent> findAll(Pageable pageable);
	
	/**
	 * Finds departmentcompositeparent by id.
	 * 
	 * @param id
	 *            The id of the wanted departmentcompositeparent.
	 * @return The found departmentcompositeparent. If no departmentcompositeparent is found, this method returns
	 *         null.
	 */
	public DepartmentCompositeParent findById(Short id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a departmentcompositeparent.
	 * 
	 * @param updated
	 *            The information of the updated departmentcompositeparent.
	 * @return The updated departmentcompositeparent.
	 * @throws EntityNotFoundException
	 *             if no departmentcompositeparent is found with given id.
	 */
	public DepartmentCompositeParent update(DepartmentCompositeParent updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the departmentcompositeparents in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the departmentcompositeparent.
	 */

	public long countAll();


    public Page<DepartmentCompositeParent> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

