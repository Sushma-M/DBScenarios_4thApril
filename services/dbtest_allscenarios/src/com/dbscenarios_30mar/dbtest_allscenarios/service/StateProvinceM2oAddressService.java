/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.dbtest_allscenarios.*;

/**
 * Service object for domain model class StateProvinceM2oAddress.
 * @see com.dbscenarios_30mar.dbtest_allscenarios.StateProvinceM2oAddress
 */

public interface StateProvinceM2oAddressService {
   /**
	 * Creates a new stateprovincem2oaddress.
	 * 
	 * @param created
	 *            The information of the created stateprovincem2oaddress.
	 * @return The created stateprovincem2oaddress.
	 */
	public StateProvinceM2oAddress create(StateProvinceM2oAddress created);

	/**
	 * Deletes a stateprovincem2oaddress.
	 * 
	 * @param stateprovincem2oaddressId
	 *            The id of the deleted stateprovincem2oaddress.
	 * @return The deleted stateprovincem2oaddress.
	 * @throws EntityNotFoundException
	 *             if no stateprovincem2oaddress is found with the given id.
	 */
	public StateProvinceM2oAddress delete(Integer stateprovincem2oaddressId) throws EntityNotFoundException;

	/**
	 * Finds all stateprovincem2oaddresss.
	 * 
	 * @return A list of stateprovincem2oaddresss.
	 */
	public Page<StateProvinceM2oAddress> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<StateProvinceM2oAddress> findAll(Pageable pageable);
	
	/**
	 * Finds stateprovincem2oaddress by id.
	 * 
	 * @param id
	 *            The id of the wanted stateprovincem2oaddress.
	 * @return The found stateprovincem2oaddress. If no stateprovincem2oaddress is found, this method returns
	 *         null.
	 */
	public StateProvinceM2oAddress findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a stateprovincem2oaddress.
	 * 
	 * @param updated
	 *            The information of the updated stateprovincem2oaddress.
	 * @return The updated stateprovincem2oaddress.
	 * @throws EntityNotFoundException
	 *             if no stateprovincem2oaddress is found with given id.
	 */
	public StateProvinceM2oAddress update(StateProvinceM2oAddress updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the stateprovincem2oaddresss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the stateprovincem2oaddress.
	 */

	public long countAll();


    public Page<StateProvinceM2oAddress> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

