/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.dbtest_allscenarios.*;

/**
 * Service object for domain model class CountryRegionM2oFromSp.
 * @see com.dbscenarios_30mar.dbtest_allscenarios.CountryRegionM2oFromSp
 */

public interface CountryRegionM2oFromSpService {
   /**
	 * Creates a new countryregionm2ofromsp.
	 * 
	 * @param created
	 *            The information of the created countryregionm2ofromsp.
	 * @return The created countryregionm2ofromsp.
	 */
	public CountryRegionM2oFromSp create(CountryRegionM2oFromSp created);

	/**
	 * Deletes a countryregionm2ofromsp.
	 * 
	 * @param countryregionm2ofromspId
	 *            The id of the deleted countryregionm2ofromsp.
	 * @return The deleted countryregionm2ofromsp.
	 * @throws EntityNotFoundException
	 *             if no countryregionm2ofromsp is found with the given id.
	 */
	public CountryRegionM2oFromSp delete(String countryregionm2ofromspId) throws EntityNotFoundException;

	/**
	 * Finds all countryregionm2ofromsps.
	 * 
	 * @return A list of countryregionm2ofromsps.
	 */
	public Page<CountryRegionM2oFromSp> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<CountryRegionM2oFromSp> findAll(Pageable pageable);
	
	/**
	 * Finds countryregionm2ofromsp by id.
	 * 
	 * @param id
	 *            The id of the wanted countryregionm2ofromsp.
	 * @return The found countryregionm2ofromsp. If no countryregionm2ofromsp is found, this method returns
	 *         null.
	 */
	public CountryRegionM2oFromSp findById(String id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a countryregionm2ofromsp.
	 * 
	 * @param updated
	 *            The information of the updated countryregionm2ofromsp.
	 * @return The updated countryregionm2ofromsp.
	 * @throws EntityNotFoundException
	 *             if no countryregionm2ofromsp is found with given id.
	 */
	public CountryRegionM2oFromSp update(CountryRegionM2oFromSp updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the countryregionm2ofromsps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the countryregionm2ofromsp.
	 */

	public long countAll();


    public Page<CountryRegionM2oFromSp> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

