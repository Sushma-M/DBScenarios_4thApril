/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.dbtest_allscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Composites1 generated by hbm2java
 */
@Entity
@Table(name="`Composites1`"
)
@IdClass(value=Composites1Id.class)
public class Composites1  implements java.io.Serializable {

    
    private Integer id;
    
    private Date dateCol;
    
    private Composites2 composites2;

    public Composites1() {
    }


    @Id 
    

    @Column(name="`ID`", insertable=false, updatable=false, precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    @Id 
    @Temporal(TemporalType.DATE)

    @Column(name="`Date Col`", insertable=false, updatable=false, length=10)
    public Date getDateCol() {
        return this.dateCol;
    }
    
    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="`Date Col1`", referencedColumnName="`Date Col`", insertable=false, updatable=false), 
        @JoinColumn(name="`ID`", referencedColumnName="`ID`", insertable=false, updatable=false) } )
    public Composites2 getComposites2() {
        return this.composites2;
    }
    
    public void setComposites2(Composites2 composites2) {
        
        this.id = composites2.getId();
      
        this.composites2 = composites2;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Composites1) )
		    return false;

		 Composites1 that = (Composites1) o;

         return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) )
 && ( (this.getDateCol()==that.getDateCol()) || ( this.getDateCol()!=null && that.getDateCol()!=null && this.getDateCol().equals(that.getDateCol()) ) )
 && ( (this.getComposites2()==that.getComposites2()) || ( this.getComposites2()!=null && that.getComposites2()!=null && this.getComposites2().equals(that.getComposites2()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + ( getDateCol() == null ? 0 : this.getDateCol().hashCode() );
         result = 37 * result + ( getComposites2() == null ? 0 : this.getComposites2().hashCode() );

         return result;
    }


}

