/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * DoubleMany2oneC generated by hbm2java
 */
@Entity
@Table(name="`Double_Many2One_C`"
)

public class DoubleMany2oneC  implements java.io.Serializable {

    
    private Double doubleId;
    
    private DoubleMany2oneP doubleMany2oneP;

    public DoubleMany2oneC() {
    }


    @Id 
    

    @Column(name="`DoubleID`", precision=18, scale=8)
    public Double getDoubleId() {
        return this.doubleId;
    }
    
    public void setDoubleId(Double doubleId) {
        this.doubleId = doubleId;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`DoubleCol1`")
    public DoubleMany2oneP getDoubleMany2oneP() {
        return this.doubleMany2oneP;
    }
    
    public void setDoubleMany2oneP(DoubleMany2oneP doubleMany2oneP) {
        this.doubleMany2oneP = doubleMany2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof DoubleMany2oneC) )
		    return false;

		 DoubleMany2oneC that = (DoubleMany2oneC) o;

		 return ( (this.getDoubleId()==that.getDoubleId()) || ( this.getDoubleId()!=null && that.getDoubleId()!=null && this.getDoubleId().equals(that.getDoubleId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getDoubleId() == null ? 0 : this.getDoubleId().hashCode() );

         return result;
    }


}

