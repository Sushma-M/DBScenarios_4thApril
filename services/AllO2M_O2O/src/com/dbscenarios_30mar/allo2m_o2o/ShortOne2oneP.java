/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * ShortOne2oneP generated by hbm2java
 */
@Entity
@Table(name="`Short_One2One_P`"
)

public class ShortOne2oneP  implements java.io.Serializable {

    
    private Short shortId;
    
    private Short short1;
    
    private ShortOne2oneC shortOne2oneC;

    public ShortOne2oneP() {
    }


    @Id 
    

    @Column(name="`ShortID`", precision=5)
    public Short getShortId() {
        return this.shortId;
    }
    
    public void setShortId(Short shortId) {
        this.shortId = shortId;
    }

    

    @Column(name="`Short1`", precision=5)
    public Short getShort1() {
        return this.short1;
    }
    
    public void setShort1(Short short1) {
        this.short1 = short1;
    }

    @Transient @OneToOne(fetch=FetchType.EAGER, mappedBy="shortOne2oneP")
    public ShortOne2oneC getShortOne2oneC() {
        return this.shortOne2oneC;
    }
    
    public void setShortOne2oneC(ShortOne2oneC shortOne2oneC) {
        this.shortOne2oneC = shortOne2oneC;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof ShortOne2oneP) )
		    return false;

		 ShortOne2oneP that = (ShortOne2oneP) o;

		 return ( (this.getShortId()==that.getShortId()) || ( this.getShortId()!=null && that.getShortId()!=null && this.getShortId().equals(that.getShortId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getShortId() == null ? 0 : this.getShortId().hashCode() );

         return result;
    }


}

