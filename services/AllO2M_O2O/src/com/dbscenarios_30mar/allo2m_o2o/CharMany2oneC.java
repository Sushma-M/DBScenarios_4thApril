/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * CharMany2oneC generated by hbm2java
 */
@Entity
@Table(name="`Char_Many2One_C`"
)

public class CharMany2oneC  implements java.io.Serializable {

    
    private Character charId;
    
    private CharMany2oneP charMany2oneP;

    public CharMany2oneC() {
    }


    @Id 
    

    @Column(name="`CharID`", length=1)
    public Character getCharId() {
        return this.charId;
    }
    
    public void setCharId(Character charId) {
        this.charId = charId;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`CharCol1`")
    public CharMany2oneP getCharMany2oneP() {
        return this.charMany2oneP;
    }
    
    public void setCharMany2oneP(CharMany2oneP charMany2oneP) {
        this.charMany2oneP = charMany2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof CharMany2oneC) )
		    return false;

		 CharMany2oneC that = (CharMany2oneC) o;

		 return ( (this.getCharId()==that.getCharId()) || ( this.getCharId()!=null && that.getCharId()!=null && this.getCharId().equals(that.getCharId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getCharId() == null ? 0 : this.getCharId().hashCode() );

         return result;
    }


}

