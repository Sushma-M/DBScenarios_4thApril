/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * ShortMany2oneC generated by hbm2java
 */
@Entity
@Table(name="`Short_Many2One_C`"
)

public class ShortMany2oneC  implements java.io.Serializable {

    
    private Short shortId;
    
    private ShortMany2oneP shortMany2oneP;

    public ShortMany2oneC() {
    }


    @Id 
    

    @Column(name="`ShortID`", precision=5)
    public Short getShortId() {
        return this.shortId;
    }
    
    public void setShortId(Short shortId) {
        this.shortId = shortId;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`ShortCol1`")
    public ShortMany2oneP getShortMany2oneP() {
        return this.shortMany2oneP;
    }
    
    public void setShortMany2oneP(ShortMany2oneP shortMany2oneP) {
        this.shortMany2oneP = shortMany2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof ShortMany2oneC) )
		    return false;

		 ShortMany2oneC that = (ShortMany2oneC) o;

		 return ( (this.getShortId()==that.getShortId()) || ( this.getShortId()!=null && that.getShortId()!=null && this.getShortId().equals(that.getShortId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getShortId() == null ? 0 : this.getShortId().hashCode() );

         return result;
    }


}

