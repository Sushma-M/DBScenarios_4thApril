/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * CharOne2oneP generated by hbm2java
 */
@Entity
@Table(name="`Char_One2One_P`"
)

public class CharOne2oneP  implements java.io.Serializable {

    
    private Character charId;
    
    private Character char1;
    
    private CharOne2oneC charOne2oneC;

    public CharOne2oneP() {
    }


    @Id 
    

    @Column(name="`CharID`", length=1)
    public Character getCharId() {
        return this.charId;
    }
    
    public void setCharId(Character charId) {
        this.charId = charId;
    }

    

    @Column(name="`Char1`", length=1)
    public Character getChar1() {
        return this.char1;
    }
    
    public void setChar1(Character char1) {
        this.char1 = char1;
    }

    @Transient @OneToOne(fetch=FetchType.EAGER, mappedBy="charOne2oneP")
    public CharOne2oneC getCharOne2oneC() {
        return this.charOne2oneC;
    }
    
    public void setCharOne2oneC(CharOne2oneC charOne2oneC) {
        this.charOne2oneC = charOne2oneC;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof CharOne2oneP) )
		    return false;

		 CharOne2oneP that = (CharOne2oneP) o;

		 return ( (this.getCharId()==that.getCharId()) || ( this.getCharId()!=null && that.getCharId()!=null && this.getCharId().equals(that.getCharId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getCharId() == null ? 0 : this.getCharId().hashCode() );

         return result;
    }


}

