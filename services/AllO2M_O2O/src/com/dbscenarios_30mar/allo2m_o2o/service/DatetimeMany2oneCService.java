/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.joda.time.LocalDateTime;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class DatetimeMany2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.DatetimeMany2oneC
 */

public interface DatetimeMany2oneCService {
   /**
	 * Creates a new datetimemany2onec.
	 * 
	 * @param created
	 *            The information of the created datetimemany2onec.
	 * @return The created datetimemany2onec.
	 */
	public DatetimeMany2oneC create(DatetimeMany2oneC created);

	/**
	 * Deletes a datetimemany2onec.
	 * 
	 * @param datetimemany2onecId
	 *            The id of the deleted datetimemany2onec.
	 * @return The deleted datetimemany2onec.
	 * @throws EntityNotFoundException
	 *             if no datetimemany2onec is found with the given id.
	 */
	public DatetimeMany2oneC delete(LocalDateTime datetimemany2onecId) throws EntityNotFoundException;

	/**
	 * Finds all datetimemany2onecs.
	 * 
	 * @return A list of datetimemany2onecs.
	 */
	public Page<DatetimeMany2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<DatetimeMany2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds datetimemany2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted datetimemany2onec.
	 * @return The found datetimemany2onec. If no datetimemany2onec is found, this method returns
	 *         null.
	 */
	public DatetimeMany2oneC findById(LocalDateTime id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a datetimemany2onec.
	 * 
	 * @param updated
	 *            The information of the updated datetimemany2onec.
	 * @return The updated datetimemany2onec.
	 * @throws EntityNotFoundException
	 *             if no datetimemany2onec is found with given id.
	 */
	public DatetimeMany2oneC update(DatetimeMany2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the datetimemany2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the datetimemany2onec.
	 */

	public long countAll();


    public Page<DatetimeMany2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

