/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class TimeStampMany2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.TimeStampMany2oneP
 */

public interface TimeStampMany2onePService {
   /**
	 * Creates a new timestampmany2onep.
	 * 
	 * @param created
	 *            The information of the created timestampmany2onep.
	 * @return The created timestampmany2onep.
	 */
	public TimeStampMany2oneP create(TimeStampMany2oneP created);

	/**
	 * Deletes a timestampmany2onep.
	 * 
	 * @param timestampmany2onepId
	 *            The id of the deleted timestampmany2onep.
	 * @return The deleted timestampmany2onep.
	 * @throws EntityNotFoundException
	 *             if no timestampmany2onep is found with the given id.
	 */
	public TimeStampMany2oneP delete(Date timestampmany2onepId) throws EntityNotFoundException;

	/**
	 * Finds all timestampmany2oneps.
	 * 
	 * @return A list of timestampmany2oneps.
	 */
	public Page<TimeStampMany2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TimeStampMany2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds timestampmany2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted timestampmany2onep.
	 * @return The found timestampmany2onep. If no timestampmany2onep is found, this method returns
	 *         null.
	 */
	public TimeStampMany2oneP findById(Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a timestampmany2onep.
	 * 
	 * @param updated
	 *            The information of the updated timestampmany2onep.
	 * @return The updated timestampmany2onep.
	 * @throws EntityNotFoundException
	 *             if no timestampmany2onep is found with given id.
	 */
	public TimeStampMany2oneP update(TimeStampMany2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the timestampmany2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the timestampmany2onep.
	 */

	public long countAll();


    public Page<TimeStampMany2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

