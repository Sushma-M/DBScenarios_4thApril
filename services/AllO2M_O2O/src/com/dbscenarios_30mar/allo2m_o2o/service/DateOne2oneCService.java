/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class DateOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.DateOne2oneC
 */

public interface DateOne2oneCService {
   /**
	 * Creates a new dateone2onec.
	 * 
	 * @param created
	 *            The information of the created dateone2onec.
	 * @return The created dateone2onec.
	 */
	public DateOne2oneC create(DateOne2oneC created);

	/**
	 * Deletes a dateone2onec.
	 * 
	 * @param dateone2onecId
	 *            The id of the deleted dateone2onec.
	 * @return The deleted dateone2onec.
	 * @throws EntityNotFoundException
	 *             if no dateone2onec is found with the given id.
	 */
	public DateOne2oneC delete(Date dateone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all dateone2onecs.
	 * 
	 * @return A list of dateone2onecs.
	 */
	public Page<DateOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<DateOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds dateone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted dateone2onec.
	 * @return The found dateone2onec. If no dateone2onec is found, this method returns
	 *         null.
	 */
	public DateOne2oneC findById(Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a dateone2onec.
	 * 
	 * @param updated
	 *            The information of the updated dateone2onec.
	 * @return The updated dateone2onec.
	 * @throws EntityNotFoundException
	 *             if no dateone2onec is found with given id.
	 */
	public DateOne2oneC update(DateOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the dateone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the dateone2onec.
	 */

	public long countAll();


    public Page<DateOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

