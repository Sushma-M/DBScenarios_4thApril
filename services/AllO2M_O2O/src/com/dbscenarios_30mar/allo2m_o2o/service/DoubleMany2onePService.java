/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class DoubleMany2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.DoubleMany2oneP
 */

public interface DoubleMany2onePService {
   /**
	 * Creates a new doublemany2onep.
	 * 
	 * @param created
	 *            The information of the created doublemany2onep.
	 * @return The created doublemany2onep.
	 */
	public DoubleMany2oneP create(DoubleMany2oneP created);

	/**
	 * Deletes a doublemany2onep.
	 * 
	 * @param doublemany2onepId
	 *            The id of the deleted doublemany2onep.
	 * @return The deleted doublemany2onep.
	 * @throws EntityNotFoundException
	 *             if no doublemany2onep is found with the given id.
	 */
	public DoubleMany2oneP delete(Double doublemany2onepId) throws EntityNotFoundException;

	/**
	 * Finds all doublemany2oneps.
	 * 
	 * @return A list of doublemany2oneps.
	 */
	public Page<DoubleMany2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<DoubleMany2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds doublemany2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted doublemany2onep.
	 * @return The found doublemany2onep. If no doublemany2onep is found, this method returns
	 *         null.
	 */
	public DoubleMany2oneP findById(Double id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a doublemany2onep.
	 * 
	 * @param updated
	 *            The information of the updated doublemany2onep.
	 * @return The updated doublemany2onep.
	 * @throws EntityNotFoundException
	 *             if no doublemany2onep is found with given id.
	 */
	public DoubleMany2oneP update(DoubleMany2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the doublemany2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the doublemany2onep.
	 */

	public long countAll();


    public Page<DoubleMany2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

