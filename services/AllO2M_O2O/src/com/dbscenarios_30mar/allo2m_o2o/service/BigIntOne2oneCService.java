/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigInteger;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class BigIntOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.BigIntOne2oneC
 */

public interface BigIntOne2oneCService {
   /**
	 * Creates a new bigintone2onec.
	 * 
	 * @param created
	 *            The information of the created bigintone2onec.
	 * @return The created bigintone2onec.
	 */
	public BigIntOne2oneC create(BigIntOne2oneC created);

	/**
	 * Deletes a bigintone2onec.
	 * 
	 * @param bigintone2onecId
	 *            The id of the deleted bigintone2onec.
	 * @return The deleted bigintone2onec.
	 * @throws EntityNotFoundException
	 *             if no bigintone2onec is found with the given id.
	 */
	public BigIntOne2oneC delete(BigInteger bigintone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all bigintone2onecs.
	 * 
	 * @return A list of bigintone2onecs.
	 */
	public Page<BigIntOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<BigIntOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds bigintone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted bigintone2onec.
	 * @return The found bigintone2onec. If no bigintone2onec is found, this method returns
	 *         null.
	 */
	public BigIntOne2oneC findById(BigInteger id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a bigintone2onec.
	 * 
	 * @param updated
	 *            The information of the updated bigintone2onec.
	 * @return The updated bigintone2onec.
	 * @throws EntityNotFoundException
	 *             if no bigintone2onec is found with given id.
	 */
	public BigIntOne2oneC update(BigIntOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the bigintone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the bigintone2onec.
	 */

	public long countAll();


    public Page<BigIntOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

