/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class IntOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.IntOne2oneP
 */

public interface IntOne2onePService {
   /**
	 * Creates a new intone2onep.
	 * 
	 * @param created
	 *            The information of the created intone2onep.
	 * @return The created intone2onep.
	 */
	public IntOne2oneP create(IntOne2oneP created);

	/**
	 * Deletes a intone2onep.
	 * 
	 * @param intone2onepId
	 *            The id of the deleted intone2onep.
	 * @return The deleted intone2onep.
	 * @throws EntityNotFoundException
	 *             if no intone2onep is found with the given id.
	 */
	public IntOne2oneP delete(Integer intone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all intone2oneps.
	 * 
	 * @return A list of intone2oneps.
	 */
	public Page<IntOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<IntOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds intone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted intone2onep.
	 * @return The found intone2onep. If no intone2onep is found, this method returns
	 *         null.
	 */
	public IntOne2oneP findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a intone2onep.
	 * 
	 * @param updated
	 *            The information of the updated intone2onep.
	 * @return The updated intone2onep.
	 * @throws EntityNotFoundException
	 *             if no intone2onep is found with given id.
	 */
	public IntOne2oneP update(IntOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the intone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the intone2onep.
	 */

	public long countAll();


    public Page<IntOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

