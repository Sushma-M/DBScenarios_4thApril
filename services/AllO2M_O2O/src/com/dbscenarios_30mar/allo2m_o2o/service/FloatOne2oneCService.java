/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class FloatOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.FloatOne2oneC
 */

public interface FloatOne2oneCService {
   /**
	 * Creates a new floatone2onec.
	 * 
	 * @param created
	 *            The information of the created floatone2onec.
	 * @return The created floatone2onec.
	 */
	public FloatOne2oneC create(FloatOne2oneC created);

	/**
	 * Deletes a floatone2onec.
	 * 
	 * @param floatone2onecId
	 *            The id of the deleted floatone2onec.
	 * @return The deleted floatone2onec.
	 * @throws EntityNotFoundException
	 *             if no floatone2onec is found with the given id.
	 */
	public FloatOne2oneC delete(Double floatone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all floatone2onecs.
	 * 
	 * @return A list of floatone2onecs.
	 */
	public Page<FloatOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<FloatOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds floatone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted floatone2onec.
	 * @return The found floatone2onec. If no floatone2onec is found, this method returns
	 *         null.
	 */
	public FloatOne2oneC findById(Double id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a floatone2onec.
	 * 
	 * @param updated
	 *            The information of the updated floatone2onec.
	 * @return The updated floatone2onec.
	 * @throws EntityNotFoundException
	 *             if no floatone2onec is found with given id.
	 */
	public FloatOne2oneC update(FloatOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the floatone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the floatone2onec.
	 */

	public long countAll();


    public Page<FloatOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

