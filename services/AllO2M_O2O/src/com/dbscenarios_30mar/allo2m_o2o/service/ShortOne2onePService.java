/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class ShortOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.ShortOne2oneP
 */

public interface ShortOne2onePService {
   /**
	 * Creates a new shortone2onep.
	 * 
	 * @param created
	 *            The information of the created shortone2onep.
	 * @return The created shortone2onep.
	 */
	public ShortOne2oneP create(ShortOne2oneP created);

	/**
	 * Deletes a shortone2onep.
	 * 
	 * @param shortone2onepId
	 *            The id of the deleted shortone2onep.
	 * @return The deleted shortone2onep.
	 * @throws EntityNotFoundException
	 *             if no shortone2onep is found with the given id.
	 */
	public ShortOne2oneP delete(Short shortone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all shortone2oneps.
	 * 
	 * @return A list of shortone2oneps.
	 */
	public Page<ShortOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ShortOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds shortone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted shortone2onep.
	 * @return The found shortone2onep. If no shortone2onep is found, this method returns
	 *         null.
	 */
	public ShortOne2oneP findById(Short id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a shortone2onep.
	 * 
	 * @param updated
	 *            The information of the updated shortone2onep.
	 * @return The updated shortone2onep.
	 * @throws EntityNotFoundException
	 *             if no shortone2onep is found with given id.
	 */
	public ShortOne2oneP update(ShortOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the shortone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the shortone2onep.
	 */

	public long countAll();


    public Page<ShortOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

