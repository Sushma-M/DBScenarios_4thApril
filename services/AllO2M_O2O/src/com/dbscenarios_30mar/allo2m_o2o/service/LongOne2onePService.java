/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigInteger;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class LongOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.LongOne2oneP
 */

public interface LongOne2onePService {
   /**
	 * Creates a new longone2onep.
	 * 
	 * @param created
	 *            The information of the created longone2onep.
	 * @return The created longone2onep.
	 */
	public LongOne2oneP create(LongOne2oneP created);

	/**
	 * Deletes a longone2onep.
	 * 
	 * @param longone2onepId
	 *            The id of the deleted longone2onep.
	 * @return The deleted longone2onep.
	 * @throws EntityNotFoundException
	 *             if no longone2onep is found with the given id.
	 */
	public LongOne2oneP delete(BigInteger longone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all longone2oneps.
	 * 
	 * @return A list of longone2oneps.
	 */
	public Page<LongOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<LongOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds longone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted longone2onep.
	 * @return The found longone2onep. If no longone2onep is found, this method returns
	 *         null.
	 */
	public LongOne2oneP findById(BigInteger id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a longone2onep.
	 * 
	 * @param updated
	 *            The information of the updated longone2onep.
	 * @return The updated longone2onep.
	 * @throws EntityNotFoundException
	 *             if no longone2onep is found with given id.
	 */
	public LongOne2oneP update(LongOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the longone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the longone2onep.
	 */

	public long countAll();


    public Page<LongOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

