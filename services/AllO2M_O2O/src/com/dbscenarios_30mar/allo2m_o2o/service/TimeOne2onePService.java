/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class TimeOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.TimeOne2oneP
 */

public interface TimeOne2onePService {
   /**
	 * Creates a new timeone2onep.
	 * 
	 * @param created
	 *            The information of the created timeone2onep.
	 * @return The created timeone2onep.
	 */
	public TimeOne2oneP create(TimeOne2oneP created);

	/**
	 * Deletes a timeone2onep.
	 * 
	 * @param timeone2onepId
	 *            The id of the deleted timeone2onep.
	 * @return The deleted timeone2onep.
	 * @throws EntityNotFoundException
	 *             if no timeone2onep is found with the given id.
	 */
	public TimeOne2oneP delete(Date timeone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all timeone2oneps.
	 * 
	 * @return A list of timeone2oneps.
	 */
	public Page<TimeOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TimeOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds timeone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted timeone2onep.
	 * @return The found timeone2onep. If no timeone2onep is found, this method returns
	 *         null.
	 */
	public TimeOne2oneP findById(Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a timeone2onep.
	 * 
	 * @param updated
	 *            The information of the updated timeone2onep.
	 * @return The updated timeone2onep.
	 * @throws EntityNotFoundException
	 *             if no timeone2onep is found with given id.
	 */
	public TimeOne2oneP update(TimeOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the timeone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the timeone2onep.
	 */

	public long countAll();


    public Page<TimeOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

