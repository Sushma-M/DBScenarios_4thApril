/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class IntMany2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.IntMany2oneP
 */

public interface IntMany2onePService {
   /**
	 * Creates a new intmany2onep.
	 * 
	 * @param created
	 *            The information of the created intmany2onep.
	 * @return The created intmany2onep.
	 */
	public IntMany2oneP create(IntMany2oneP created);

	/**
	 * Deletes a intmany2onep.
	 * 
	 * @param intmany2onepId
	 *            The id of the deleted intmany2onep.
	 * @return The deleted intmany2onep.
	 * @throws EntityNotFoundException
	 *             if no intmany2onep is found with the given id.
	 */
	public IntMany2oneP delete(Integer intmany2onepId) throws EntityNotFoundException;

	/**
	 * Finds all intmany2oneps.
	 * 
	 * @return A list of intmany2oneps.
	 */
	public Page<IntMany2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<IntMany2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds intmany2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted intmany2onep.
	 * @return The found intmany2onep. If no intmany2onep is found, this method returns
	 *         null.
	 */
	public IntMany2oneP findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a intmany2onep.
	 * 
	 * @param updated
	 *            The information of the updated intmany2onep.
	 * @return The updated intmany2onep.
	 * @throws EntityNotFoundException
	 *             if no intmany2onep is found with given id.
	 */
	public IntMany2oneP update(IntMany2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the intmany2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the intmany2onep.
	 */

	public long countAll();


    public Page<IntMany2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

