/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class StringOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.StringOne2oneC
 */

public interface StringOne2oneCService {
   /**
	 * Creates a new stringone2onec.
	 * 
	 * @param created
	 *            The information of the created stringone2onec.
	 * @return The created stringone2onec.
	 */
	public StringOne2oneC create(StringOne2oneC created);

	/**
	 * Deletes a stringone2onec.
	 * 
	 * @param stringone2onecId
	 *            The id of the deleted stringone2onec.
	 * @return The deleted stringone2onec.
	 * @throws EntityNotFoundException
	 *             if no stringone2onec is found with the given id.
	 */
	public StringOne2oneC delete(String stringone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all stringone2onecs.
	 * 
	 * @return A list of stringone2onecs.
	 */
	public Page<StringOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<StringOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds stringone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted stringone2onec.
	 * @return The found stringone2onec. If no stringone2onec is found, this method returns
	 *         null.
	 */
	public StringOne2oneC findById(String id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a stringone2onec.
	 * 
	 * @param updated
	 *            The information of the updated stringone2onec.
	 * @return The updated stringone2onec.
	 * @throws EntityNotFoundException
	 *             if no stringone2onec is found with given id.
	 */
	public StringOne2oneC update(StringOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the stringone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the stringone2onec.
	 */

	public long countAll();


    public Page<StringOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

