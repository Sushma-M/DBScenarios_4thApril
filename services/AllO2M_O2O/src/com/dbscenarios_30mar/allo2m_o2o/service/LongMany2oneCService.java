/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigInteger;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class LongMany2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.LongMany2oneC
 */

public interface LongMany2oneCService {
   /**
	 * Creates a new longmany2onec.
	 * 
	 * @param created
	 *            The information of the created longmany2onec.
	 * @return The created longmany2onec.
	 */
	public LongMany2oneC create(LongMany2oneC created);

	/**
	 * Deletes a longmany2onec.
	 * 
	 * @param longmany2onecId
	 *            The id of the deleted longmany2onec.
	 * @return The deleted longmany2onec.
	 * @throws EntityNotFoundException
	 *             if no longmany2onec is found with the given id.
	 */
	public LongMany2oneC delete(BigInteger longmany2onecId) throws EntityNotFoundException;

	/**
	 * Finds all longmany2onecs.
	 * 
	 * @return A list of longmany2onecs.
	 */
	public Page<LongMany2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<LongMany2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds longmany2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted longmany2onec.
	 * @return The found longmany2onec. If no longmany2onec is found, this method returns
	 *         null.
	 */
	public LongMany2oneC findById(BigInteger id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a longmany2onec.
	 * 
	 * @param updated
	 *            The information of the updated longmany2onec.
	 * @return The updated longmany2onec.
	 * @throws EntityNotFoundException
	 *             if no longmany2onec is found with given id.
	 */
	public LongMany2oneC update(LongMany2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the longmany2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the longmany2onec.
	 */

	public long countAll();


    public Page<LongMany2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

