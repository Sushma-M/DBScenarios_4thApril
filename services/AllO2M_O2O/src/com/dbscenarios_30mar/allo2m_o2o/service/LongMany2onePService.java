/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigInteger;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class LongMany2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.LongMany2oneP
 */

public interface LongMany2onePService {
   /**
	 * Creates a new longmany2onep.
	 * 
	 * @param created
	 *            The information of the created longmany2onep.
	 * @return The created longmany2onep.
	 */
	public LongMany2oneP create(LongMany2oneP created);

	/**
	 * Deletes a longmany2onep.
	 * 
	 * @param longmany2onepId
	 *            The id of the deleted longmany2onep.
	 * @return The deleted longmany2onep.
	 * @throws EntityNotFoundException
	 *             if no longmany2onep is found with the given id.
	 */
	public LongMany2oneP delete(BigInteger longmany2onepId) throws EntityNotFoundException;

	/**
	 * Finds all longmany2oneps.
	 * 
	 * @return A list of longmany2oneps.
	 */
	public Page<LongMany2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<LongMany2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds longmany2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted longmany2onep.
	 * @return The found longmany2onep. If no longmany2onep is found, this method returns
	 *         null.
	 */
	public LongMany2oneP findById(BigInteger id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a longmany2onep.
	 * 
	 * @param updated
	 *            The information of the updated longmany2onep.
	 * @return The updated longmany2onep.
	 * @throws EntityNotFoundException
	 *             if no longmany2onep is found with given id.
	 */
	public LongMany2oneP update(LongMany2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the longmany2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the longmany2onep.
	 */

	public long countAll();


    public Page<LongMany2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

