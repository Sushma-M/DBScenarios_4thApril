/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigDecimal;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class BigdecOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.BigdecOne2oneC
 */

public interface BigdecOne2oneCService {
   /**
	 * Creates a new bigdecone2onec.
	 * 
	 * @param created
	 *            The information of the created bigdecone2onec.
	 * @return The created bigdecone2onec.
	 */
	public BigdecOne2oneC create(BigdecOne2oneC created);

	/**
	 * Deletes a bigdecone2onec.
	 * 
	 * @param bigdecone2onecId
	 *            The id of the deleted bigdecone2onec.
	 * @return The deleted bigdecone2onec.
	 * @throws EntityNotFoundException
	 *             if no bigdecone2onec is found with the given id.
	 */
	public BigdecOne2oneC delete(BigDecimal bigdecone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all bigdecone2onecs.
	 * 
	 * @return A list of bigdecone2onecs.
	 */
	public Page<BigdecOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<BigdecOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds bigdecone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted bigdecone2onec.
	 * @return The found bigdecone2onec. If no bigdecone2onec is found, this method returns
	 *         null.
	 */
	public BigdecOne2oneC findById(BigDecimal id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a bigdecone2onec.
	 * 
	 * @param updated
	 *            The information of the updated bigdecone2onec.
	 * @return The updated bigdecone2onec.
	 * @throws EntityNotFoundException
	 *             if no bigdecone2onec is found with given id.
	 */
	public BigdecOne2oneC update(BigdecOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the bigdecone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the bigdecone2onec.
	 */

	public long countAll();


    public Page<BigdecOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

