/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class ShortMany2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.ShortMany2oneC
 */

public interface ShortMany2oneCService {
   /**
	 * Creates a new shortmany2onec.
	 * 
	 * @param created
	 *            The information of the created shortmany2onec.
	 * @return The created shortmany2onec.
	 */
	public ShortMany2oneC create(ShortMany2oneC created);

	/**
	 * Deletes a shortmany2onec.
	 * 
	 * @param shortmany2onecId
	 *            The id of the deleted shortmany2onec.
	 * @return The deleted shortmany2onec.
	 * @throws EntityNotFoundException
	 *             if no shortmany2onec is found with the given id.
	 */
	public ShortMany2oneC delete(Short shortmany2onecId) throws EntityNotFoundException;

	/**
	 * Finds all shortmany2onecs.
	 * 
	 * @return A list of shortmany2onecs.
	 */
	public Page<ShortMany2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ShortMany2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds shortmany2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted shortmany2onec.
	 * @return The found shortmany2onec. If no shortmany2onec is found, this method returns
	 *         null.
	 */
	public ShortMany2oneC findById(Short id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a shortmany2onec.
	 * 
	 * @param updated
	 *            The information of the updated shortmany2onec.
	 * @return The updated shortmany2onec.
	 * @throws EntityNotFoundException
	 *             if no shortmany2onec is found with given id.
	 */
	public ShortMany2oneC update(ShortMany2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the shortmany2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the shortmany2onec.
	 */

	public long countAll();


    public Page<ShortMany2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

