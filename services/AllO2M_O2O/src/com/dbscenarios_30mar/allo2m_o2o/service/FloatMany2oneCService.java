/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class FloatMany2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.FloatMany2oneC
 */

public interface FloatMany2oneCService {
   /**
	 * Creates a new floatmany2onec.
	 * 
	 * @param created
	 *            The information of the created floatmany2onec.
	 * @return The created floatmany2onec.
	 */
	public FloatMany2oneC create(FloatMany2oneC created);

	/**
	 * Deletes a floatmany2onec.
	 * 
	 * @param floatmany2onecId
	 *            The id of the deleted floatmany2onec.
	 * @return The deleted floatmany2onec.
	 * @throws EntityNotFoundException
	 *             if no floatmany2onec is found with the given id.
	 */
	public FloatMany2oneC delete(Double floatmany2onecId) throws EntityNotFoundException;

	/**
	 * Finds all floatmany2onecs.
	 * 
	 * @return A list of floatmany2onecs.
	 */
	public Page<FloatMany2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<FloatMany2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds floatmany2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted floatmany2onec.
	 * @return The found floatmany2onec. If no floatmany2onec is found, this method returns
	 *         null.
	 */
	public FloatMany2oneC findById(Double id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a floatmany2onec.
	 * 
	 * @param updated
	 *            The information of the updated floatmany2onec.
	 * @return The updated floatmany2onec.
	 * @throws EntityNotFoundException
	 *             if no floatmany2onec is found with given id.
	 */
	public FloatMany2oneC update(FloatMany2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the floatmany2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the floatmany2onec.
	 */

	public long countAll();


    public Page<FloatMany2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

