/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class StringOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.StringOne2oneP
 */

public interface StringOne2onePService {
   /**
	 * Creates a new stringone2onep.
	 * 
	 * @param created
	 *            The information of the created stringone2onep.
	 * @return The created stringone2onep.
	 */
	public StringOne2oneP create(StringOne2oneP created);

	/**
	 * Deletes a stringone2onep.
	 * 
	 * @param stringone2onepId
	 *            The id of the deleted stringone2onep.
	 * @return The deleted stringone2onep.
	 * @throws EntityNotFoundException
	 *             if no stringone2onep is found with the given id.
	 */
	public StringOne2oneP delete(String stringone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all stringone2oneps.
	 * 
	 * @return A list of stringone2oneps.
	 */
	public Page<StringOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<StringOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds stringone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted stringone2onep.
	 * @return The found stringone2onep. If no stringone2onep is found, this method returns
	 *         null.
	 */
	public StringOne2oneP findById(String id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a stringone2onep.
	 * 
	 * @param updated
	 *            The information of the updated stringone2onep.
	 * @return The updated stringone2onep.
	 * @throws EntityNotFoundException
	 *             if no stringone2onep is found with given id.
	 */
	public StringOne2oneP update(StringOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the stringone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the stringone2onep.
	 */

	public long countAll();


    public Page<StringOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

