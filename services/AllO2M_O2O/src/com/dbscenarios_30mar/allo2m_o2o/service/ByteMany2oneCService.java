/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class ByteMany2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.ByteMany2oneC
 */

public interface ByteMany2oneCService {
   /**
	 * Creates a new bytemany2onec.
	 * 
	 * @param created
	 *            The information of the created bytemany2onec.
	 * @return The created bytemany2onec.
	 */
	public ByteMany2oneC create(ByteMany2oneC created);

	/**
	 * Deletes a bytemany2onec.
	 * 
	 * @param bytemany2onecId
	 *            The id of the deleted bytemany2onec.
	 * @return The deleted bytemany2onec.
	 * @throws EntityNotFoundException
	 *             if no bytemany2onec is found with the given id.
	 */
	public ByteMany2oneC delete(Byte bytemany2onecId) throws EntityNotFoundException;

	/**
	 * Finds all bytemany2onecs.
	 * 
	 * @return A list of bytemany2onecs.
	 */
	public Page<ByteMany2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ByteMany2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds bytemany2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted bytemany2onec.
	 * @return The found bytemany2onec. If no bytemany2onec is found, this method returns
	 *         null.
	 */
	public ByteMany2oneC findById(Byte id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a bytemany2onec.
	 * 
	 * @param updated
	 *            The information of the updated bytemany2onec.
	 * @return The updated bytemany2onec.
	 * @throws EntityNotFoundException
	 *             if no bytemany2onec is found with given id.
	 */
	public ByteMany2oneC update(ByteMany2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the bytemany2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the bytemany2onec.
	 */

	public long countAll();


    public Page<ByteMany2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

