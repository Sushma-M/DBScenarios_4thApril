/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class FloatOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.FloatOne2oneP
 */

public interface FloatOne2onePService {
   /**
	 * Creates a new floatone2onep.
	 * 
	 * @param created
	 *            The information of the created floatone2onep.
	 * @return The created floatone2onep.
	 */
	public FloatOne2oneP create(FloatOne2oneP created);

	/**
	 * Deletes a floatone2onep.
	 * 
	 * @param floatone2onepId
	 *            The id of the deleted floatone2onep.
	 * @return The deleted floatone2onep.
	 * @throws EntityNotFoundException
	 *             if no floatone2onep is found with the given id.
	 */
	public FloatOne2oneP delete(Double floatone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all floatone2oneps.
	 * 
	 * @return A list of floatone2oneps.
	 */
	public Page<FloatOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<FloatOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds floatone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted floatone2onep.
	 * @return The found floatone2onep. If no floatone2onep is found, this method returns
	 *         null.
	 */
	public FloatOne2oneP findById(Double id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a floatone2onep.
	 * 
	 * @param updated
	 *            The information of the updated floatone2onep.
	 * @return The updated floatone2onep.
	 * @throws EntityNotFoundException
	 *             if no floatone2onep is found with given id.
	 */
	public FloatOne2oneP update(FloatOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the floatone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the floatone2onep.
	 */

	public long countAll();


    public Page<FloatOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

