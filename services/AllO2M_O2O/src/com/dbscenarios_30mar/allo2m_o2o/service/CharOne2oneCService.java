/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class CharOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.CharOne2oneC
 */

public interface CharOne2oneCService {
   /**
	 * Creates a new charone2onec.
	 * 
	 * @param created
	 *            The information of the created charone2onec.
	 * @return The created charone2onec.
	 */
	public CharOne2oneC create(CharOne2oneC created);

	/**
	 * Deletes a charone2onec.
	 * 
	 * @param charone2onecId
	 *            The id of the deleted charone2onec.
	 * @return The deleted charone2onec.
	 * @throws EntityNotFoundException
	 *             if no charone2onec is found with the given id.
	 */
	public CharOne2oneC delete(Character charone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all charone2onecs.
	 * 
	 * @return A list of charone2onecs.
	 */
	public Page<CharOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<CharOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds charone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted charone2onec.
	 * @return The found charone2onec. If no charone2onec is found, this method returns
	 *         null.
	 */
	public CharOne2oneC findById(Character id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a charone2onec.
	 * 
	 * @param updated
	 *            The information of the updated charone2onec.
	 * @return The updated charone2onec.
	 * @throws EntityNotFoundException
	 *             if no charone2onec is found with given id.
	 */
	public CharOne2oneC update(CharOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the charone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the charone2onec.
	 */

	public long countAll();


    public Page<CharOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

