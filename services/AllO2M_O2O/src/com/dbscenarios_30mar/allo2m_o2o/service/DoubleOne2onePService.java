/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class DoubleOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.DoubleOne2oneP
 */

public interface DoubleOne2onePService {
   /**
	 * Creates a new doubleone2onep.
	 * 
	 * @param created
	 *            The information of the created doubleone2onep.
	 * @return The created doubleone2onep.
	 */
	public DoubleOne2oneP create(DoubleOne2oneP created);

	/**
	 * Deletes a doubleone2onep.
	 * 
	 * @param doubleone2onepId
	 *            The id of the deleted doubleone2onep.
	 * @return The deleted doubleone2onep.
	 * @throws EntityNotFoundException
	 *             if no doubleone2onep is found with the given id.
	 */
	public DoubleOne2oneP delete(Double doubleone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all doubleone2oneps.
	 * 
	 * @return A list of doubleone2oneps.
	 */
	public Page<DoubleOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<DoubleOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds doubleone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted doubleone2onep.
	 * @return The found doubleone2onep. If no doubleone2onep is found, this method returns
	 *         null.
	 */
	public DoubleOne2oneP findById(Double id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a doubleone2onep.
	 * 
	 * @param updated
	 *            The information of the updated doubleone2onep.
	 * @return The updated doubleone2onep.
	 * @throws EntityNotFoundException
	 *             if no doubleone2onep is found with given id.
	 */
	public DoubleOne2oneP update(DoubleOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the doubleone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the doubleone2onep.
	 */

	public long countAll();


    public Page<DoubleOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

