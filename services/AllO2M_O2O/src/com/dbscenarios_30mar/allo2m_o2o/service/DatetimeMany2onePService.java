/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.joda.time.LocalDateTime;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class DatetimeMany2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.DatetimeMany2oneP
 */

public interface DatetimeMany2onePService {
   /**
	 * Creates a new datetimemany2onep.
	 * 
	 * @param created
	 *            The information of the created datetimemany2onep.
	 * @return The created datetimemany2onep.
	 */
	public DatetimeMany2oneP create(DatetimeMany2oneP created);

	/**
	 * Deletes a datetimemany2onep.
	 * 
	 * @param datetimemany2onepId
	 *            The id of the deleted datetimemany2onep.
	 * @return The deleted datetimemany2onep.
	 * @throws EntityNotFoundException
	 *             if no datetimemany2onep is found with the given id.
	 */
	public DatetimeMany2oneP delete(LocalDateTime datetimemany2onepId) throws EntityNotFoundException;

	/**
	 * Finds all datetimemany2oneps.
	 * 
	 * @return A list of datetimemany2oneps.
	 */
	public Page<DatetimeMany2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<DatetimeMany2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds datetimemany2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted datetimemany2onep.
	 * @return The found datetimemany2onep. If no datetimemany2onep is found, this method returns
	 *         null.
	 */
	public DatetimeMany2oneP findById(LocalDateTime id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a datetimemany2onep.
	 * 
	 * @param updated
	 *            The information of the updated datetimemany2onep.
	 * @return The updated datetimemany2onep.
	 * @throws EntityNotFoundException
	 *             if no datetimemany2onep is found with given id.
	 */
	public DatetimeMany2oneP update(DatetimeMany2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the datetimemany2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the datetimemany2onep.
	 */

	public long countAll();


    public Page<DatetimeMany2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

