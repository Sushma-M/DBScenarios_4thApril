/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class ByteOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.ByteOne2oneC
 */

public interface ByteOne2oneCService {
   /**
	 * Creates a new byteone2onec.
	 * 
	 * @param created
	 *            The information of the created byteone2onec.
	 * @return The created byteone2onec.
	 */
	public ByteOne2oneC create(ByteOne2oneC created);

	/**
	 * Deletes a byteone2onec.
	 * 
	 * @param byteone2onecId
	 *            The id of the deleted byteone2onec.
	 * @return The deleted byteone2onec.
	 * @throws EntityNotFoundException
	 *             if no byteone2onec is found with the given id.
	 */
	public ByteOne2oneC delete(Byte byteone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all byteone2onecs.
	 * 
	 * @return A list of byteone2onecs.
	 */
	public Page<ByteOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ByteOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds byteone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted byteone2onec.
	 * @return The found byteone2onec. If no byteone2onec is found, this method returns
	 *         null.
	 */
	public ByteOne2oneC findById(Byte id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a byteone2onec.
	 * 
	 * @param updated
	 *            The information of the updated byteone2onec.
	 * @return The updated byteone2onec.
	 * @throws EntityNotFoundException
	 *             if no byteone2onec is found with given id.
	 */
	public ByteOne2oneC update(ByteOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the byteone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the byteone2onec.
	 */

	public long countAll();


    public Page<ByteOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

