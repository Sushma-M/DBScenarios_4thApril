/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class TimeStampOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.TimeStampOne2oneP
 */

public interface TimeStampOne2onePService {
   /**
	 * Creates a new timestampone2onep.
	 * 
	 * @param created
	 *            The information of the created timestampone2onep.
	 * @return The created timestampone2onep.
	 */
	public TimeStampOne2oneP create(TimeStampOne2oneP created);

	/**
	 * Deletes a timestampone2onep.
	 * 
	 * @param timestampone2onepId
	 *            The id of the deleted timestampone2onep.
	 * @return The deleted timestampone2onep.
	 * @throws EntityNotFoundException
	 *             if no timestampone2onep is found with the given id.
	 */
	public TimeStampOne2oneP delete(Date timestampone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all timestampone2oneps.
	 * 
	 * @return A list of timestampone2oneps.
	 */
	public Page<TimeStampOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TimeStampOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds timestampone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted timestampone2onep.
	 * @return The found timestampone2onep. If no timestampone2onep is found, this method returns
	 *         null.
	 */
	public TimeStampOne2oneP findById(Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a timestampone2onep.
	 * 
	 * @param updated
	 *            The information of the updated timestampone2onep.
	 * @return The updated timestampone2onep.
	 * @throws EntityNotFoundException
	 *             if no timestampone2onep is found with given id.
	 */
	public TimeStampOne2oneP update(TimeStampOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the timestampone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the timestampone2onep.
	 */

	public long countAll();


    public Page<TimeStampOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

