/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class TimeStampOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.TimeStampOne2oneC
 */

public interface TimeStampOne2oneCService {
   /**
	 * Creates a new timestampone2onec.
	 * 
	 * @param created
	 *            The information of the created timestampone2onec.
	 * @return The created timestampone2onec.
	 */
	public TimeStampOne2oneC create(TimeStampOne2oneC created);

	/**
	 * Deletes a timestampone2onec.
	 * 
	 * @param timestampone2onecId
	 *            The id of the deleted timestampone2onec.
	 * @return The deleted timestampone2onec.
	 * @throws EntityNotFoundException
	 *             if no timestampone2onec is found with the given id.
	 */
	public TimeStampOne2oneC delete(Date timestampone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all timestampone2onecs.
	 * 
	 * @return A list of timestampone2onecs.
	 */
	public Page<TimeStampOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TimeStampOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds timestampone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted timestampone2onec.
	 * @return The found timestampone2onec. If no timestampone2onec is found, this method returns
	 *         null.
	 */
	public TimeStampOne2oneC findById(Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a timestampone2onec.
	 * 
	 * @param updated
	 *            The information of the updated timestampone2onec.
	 * @return The updated timestampone2onec.
	 * @throws EntityNotFoundException
	 *             if no timestampone2onec is found with given id.
	 */
	public TimeStampOne2oneC update(TimeStampOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the timestampone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the timestampone2onec.
	 */

	public long countAll();


    public Page<TimeStampOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

