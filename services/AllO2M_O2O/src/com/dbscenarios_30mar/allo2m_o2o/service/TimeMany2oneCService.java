/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class TimeMany2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.TimeMany2oneC
 */

public interface TimeMany2oneCService {
   /**
	 * Creates a new timemany2onec.
	 * 
	 * @param created
	 *            The information of the created timemany2onec.
	 * @return The created timemany2onec.
	 */
	public TimeMany2oneC create(TimeMany2oneC created);

	/**
	 * Deletes a timemany2onec.
	 * 
	 * @param timemany2onecId
	 *            The id of the deleted timemany2onec.
	 * @return The deleted timemany2onec.
	 * @throws EntityNotFoundException
	 *             if no timemany2onec is found with the given id.
	 */
	public TimeMany2oneC delete(Date timemany2onecId) throws EntityNotFoundException;

	/**
	 * Finds all timemany2onecs.
	 * 
	 * @return A list of timemany2onecs.
	 */
	public Page<TimeMany2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TimeMany2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds timemany2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted timemany2onec.
	 * @return The found timemany2onec. If no timemany2onec is found, this method returns
	 *         null.
	 */
	public TimeMany2oneC findById(Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a timemany2onec.
	 * 
	 * @param updated
	 *            The information of the updated timemany2onec.
	 * @return The updated timemany2onec.
	 * @throws EntityNotFoundException
	 *             if no timemany2onec is found with given id.
	 */
	public TimeMany2oneC update(TimeMany2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the timemany2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the timemany2onec.
	 */

	public long countAll();


    public Page<TimeMany2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

