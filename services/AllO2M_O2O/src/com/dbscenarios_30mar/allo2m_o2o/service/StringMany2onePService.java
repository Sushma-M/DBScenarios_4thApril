/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class StringMany2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.StringMany2oneP
 */

public interface StringMany2onePService {
   /**
	 * Creates a new stringmany2onep.
	 * 
	 * @param created
	 *            The information of the created stringmany2onep.
	 * @return The created stringmany2onep.
	 */
	public StringMany2oneP create(StringMany2oneP created);

	/**
	 * Deletes a stringmany2onep.
	 * 
	 * @param stringmany2onepId
	 *            The id of the deleted stringmany2onep.
	 * @return The deleted stringmany2onep.
	 * @throws EntityNotFoundException
	 *             if no stringmany2onep is found with the given id.
	 */
	public StringMany2oneP delete(String stringmany2onepId) throws EntityNotFoundException;

	/**
	 * Finds all stringmany2oneps.
	 * 
	 * @return A list of stringmany2oneps.
	 */
	public Page<StringMany2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<StringMany2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds stringmany2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted stringmany2onep.
	 * @return The found stringmany2onep. If no stringmany2onep is found, this method returns
	 *         null.
	 */
	public StringMany2oneP findById(String id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a stringmany2onep.
	 * 
	 * @param updated
	 *            The information of the updated stringmany2onep.
	 * @return The updated stringmany2onep.
	 * @throws EntityNotFoundException
	 *             if no stringmany2onep is found with given id.
	 */
	public StringMany2oneP update(StringMany2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the stringmany2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the stringmany2onep.
	 */

	public long countAll();


    public Page<StringMany2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

