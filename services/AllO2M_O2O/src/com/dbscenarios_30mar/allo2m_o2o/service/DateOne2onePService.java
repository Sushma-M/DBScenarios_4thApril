/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class DateOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.DateOne2oneP
 */

public interface DateOne2onePService {
   /**
	 * Creates a new dateone2onep.
	 * 
	 * @param created
	 *            The information of the created dateone2onep.
	 * @return The created dateone2onep.
	 */
	public DateOne2oneP create(DateOne2oneP created);

	/**
	 * Deletes a dateone2onep.
	 * 
	 * @param dateone2onepId
	 *            The id of the deleted dateone2onep.
	 * @return The deleted dateone2onep.
	 * @throws EntityNotFoundException
	 *             if no dateone2onep is found with the given id.
	 */
	public DateOne2oneP delete(Date dateone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all dateone2oneps.
	 * 
	 * @return A list of dateone2oneps.
	 */
	public Page<DateOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<DateOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds dateone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted dateone2onep.
	 * @return The found dateone2onep. If no dateone2onep is found, this method returns
	 *         null.
	 */
	public DateOne2oneP findById(Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a dateone2onep.
	 * 
	 * @param updated
	 *            The information of the updated dateone2onep.
	 * @return The updated dateone2onep.
	 * @throws EntityNotFoundException
	 *             if no dateone2onep is found with given id.
	 */
	public DateOne2oneP update(DateOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the dateone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the dateone2onep.
	 */

	public long countAll();


    public Page<DateOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

