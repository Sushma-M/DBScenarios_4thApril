/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigDecimal;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class BigdecOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.BigdecOne2oneP
 */

public interface BigdecOne2onePService {
   /**
	 * Creates a new bigdecone2onep.
	 * 
	 * @param created
	 *            The information of the created bigdecone2onep.
	 * @return The created bigdecone2onep.
	 */
	public BigdecOne2oneP create(BigdecOne2oneP created);

	/**
	 * Deletes a bigdecone2onep.
	 * 
	 * @param bigdecone2onepId
	 *            The id of the deleted bigdecone2onep.
	 * @return The deleted bigdecone2onep.
	 * @throws EntityNotFoundException
	 *             if no bigdecone2onep is found with the given id.
	 */
	public BigdecOne2oneP delete(BigDecimal bigdecone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all bigdecone2oneps.
	 * 
	 * @return A list of bigdecone2oneps.
	 */
	public Page<BigdecOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<BigdecOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds bigdecone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted bigdecone2onep.
	 * @return The found bigdecone2onep. If no bigdecone2onep is found, this method returns
	 *         null.
	 */
	public BigdecOne2oneP findById(BigDecimal id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a bigdecone2onep.
	 * 
	 * @param updated
	 *            The information of the updated bigdecone2onep.
	 * @return The updated bigdecone2onep.
	 * @throws EntityNotFoundException
	 *             if no bigdecone2onep is found with given id.
	 */
	public BigdecOne2oneP update(BigdecOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the bigdecone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the bigdecone2onep.
	 */

	public long countAll();


    public Page<BigdecOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

