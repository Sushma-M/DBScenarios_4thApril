/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class TimeOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.TimeOne2oneC
 */

public interface TimeOne2oneCService {
   /**
	 * Creates a new timeone2onec.
	 * 
	 * @param created
	 *            The information of the created timeone2onec.
	 * @return The created timeone2onec.
	 */
	public TimeOne2oneC create(TimeOne2oneC created);

	/**
	 * Deletes a timeone2onec.
	 * 
	 * @param timeone2onecId
	 *            The id of the deleted timeone2onec.
	 * @return The deleted timeone2onec.
	 * @throws EntityNotFoundException
	 *             if no timeone2onec is found with the given id.
	 */
	public TimeOne2oneC delete(Date timeone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all timeone2onecs.
	 * 
	 * @return A list of timeone2onecs.
	 */
	public Page<TimeOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TimeOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds timeone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted timeone2onec.
	 * @return The found timeone2onec. If no timeone2onec is found, this method returns
	 *         null.
	 */
	public TimeOne2oneC findById(Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a timeone2onec.
	 * 
	 * @param updated
	 *            The information of the updated timeone2onec.
	 * @return The updated timeone2onec.
	 * @throws EntityNotFoundException
	 *             if no timeone2onec is found with given id.
	 */
	public TimeOne2oneC update(TimeOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the timeone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the timeone2onec.
	 */

	public long countAll();


    public Page<TimeOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

