/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigInteger;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class LongOne2oneC.
 * @see com.dbscenarios_30mar.allo2m_o2o.LongOne2oneC
 */

public interface LongOne2oneCService {
   /**
	 * Creates a new longone2onec.
	 * 
	 * @param created
	 *            The information of the created longone2onec.
	 * @return The created longone2onec.
	 */
	public LongOne2oneC create(LongOne2oneC created);

	/**
	 * Deletes a longone2onec.
	 * 
	 * @param longone2onecId
	 *            The id of the deleted longone2onec.
	 * @return The deleted longone2onec.
	 * @throws EntityNotFoundException
	 *             if no longone2onec is found with the given id.
	 */
	public LongOne2oneC delete(BigInteger longone2onecId) throws EntityNotFoundException;

	/**
	 * Finds all longone2onecs.
	 * 
	 * @return A list of longone2onecs.
	 */
	public Page<LongOne2oneC> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<LongOne2oneC> findAll(Pageable pageable);
	
	/**
	 * Finds longone2onec by id.
	 * 
	 * @param id
	 *            The id of the wanted longone2onec.
	 * @return The found longone2onec. If no longone2onec is found, this method returns
	 *         null.
	 */
	public LongOne2oneC findById(BigInteger id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a longone2onec.
	 * 
	 * @param updated
	 *            The information of the updated longone2onec.
	 * @return The updated longone2onec.
	 * @throws EntityNotFoundException
	 *             if no longone2onec is found with given id.
	 */
	public LongOne2oneC update(LongOne2oneC updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the longone2onecs in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the longone2onec.
	 */

	public long countAll();


    public Page<LongOne2oneC> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

