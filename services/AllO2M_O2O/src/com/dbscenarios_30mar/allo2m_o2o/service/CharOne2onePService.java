/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.dbscenarios_30mar.allo2m_o2o.*;

/**
 * Service object for domain model class CharOne2oneP.
 * @see com.dbscenarios_30mar.allo2m_o2o.CharOne2oneP
 */

public interface CharOne2onePService {
   /**
	 * Creates a new charone2onep.
	 * 
	 * @param created
	 *            The information of the created charone2onep.
	 * @return The created charone2onep.
	 */
	public CharOne2oneP create(CharOne2oneP created);

	/**
	 * Deletes a charone2onep.
	 * 
	 * @param charone2onepId
	 *            The id of the deleted charone2onep.
	 * @return The deleted charone2onep.
	 * @throws EntityNotFoundException
	 *             if no charone2onep is found with the given id.
	 */
	public CharOne2oneP delete(Character charone2onepId) throws EntityNotFoundException;

	/**
	 * Finds all charone2oneps.
	 * 
	 * @return A list of charone2oneps.
	 */
	public Page<CharOne2oneP> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<CharOne2oneP> findAll(Pageable pageable);
	
	/**
	 * Finds charone2onep by id.
	 * 
	 * @param id
	 *            The id of the wanted charone2onep.
	 * @return The found charone2onep. If no charone2onep is found, this method returns
	 *         null.
	 */
	public CharOne2oneP findById(Character id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a charone2onep.
	 * 
	 * @param updated
	 *            The information of the updated charone2onep.
	 * @return The updated charone2onep.
	 * @throws EntityNotFoundException
	 *             if no charone2onep is found with given id.
	 */
	public CharOne2oneP update(CharOne2oneP updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the charone2oneps in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the charone2onep.
	 */

	public long countAll();


    public Page<CharOne2oneP> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

