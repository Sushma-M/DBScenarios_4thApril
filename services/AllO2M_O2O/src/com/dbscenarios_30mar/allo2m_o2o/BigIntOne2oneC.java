/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigInteger;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * BigIntOne2oneC generated by hbm2java
 */
@Entity
@Table(name="`BigInt_One2One_C`"
)

public class BigIntOne2oneC  implements java.io.Serializable {

    
    private BigInteger bigIntId;
    
    private BigInteger bigInt1;
    
    private BigIntOne2oneP bigIntOne2oneP;

    public BigIntOne2oneC() {
    }


    @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="bigIntOne2oneP"))@Id @GeneratedValue(generator="generator")
    

    @Column(name="`BigIntID`", precision=20)
    public BigInteger getBigIntId() {
        return this.bigIntId;
    }
    
    public void setBigIntId(BigInteger bigIntId) {
        this.bigIntId = bigIntId;
    }

    

    @Column(name="`BigInt1`", precision=20)
    public BigInteger getBigInt1() {
        return this.bigInt1;
    }
    
    public void setBigInt1(BigInteger bigInt1) {
        this.bigInt1 = bigInt1;
    }

    @OneToOne(fetch=FetchType.EAGER) @PrimaryKeyJoinColumn
    public BigIntOne2oneP getBigIntOne2oneP() {
        return this.bigIntOne2oneP;
    }
    
    public void setBigIntOne2oneP(BigIntOne2oneP bigIntOne2oneP) {
        this.bigIntOne2oneP = bigIntOne2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof BigIntOne2oneC) )
		    return false;

		 BigIntOne2oneC that = (BigIntOne2oneC) o;

		 return ( (this.getBigIntId()==that.getBigIntId()) || ( this.getBigIntId()!=null && that.getBigIntId()!=null && this.getBigIntId().equals(that.getBigIntId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getBigIntId() == null ? 0 : this.getBigIntId().hashCode() );

         return result;
    }


}

