/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * TimeStampMany2oneC generated by hbm2java
 */
@Entity
@Table(name="`TimeStamp_Many2One_C`"
)

public class TimeStampMany2oneC  implements java.io.Serializable {

    
    private Date timeStampId;
    
    private TimeStampMany2oneP timeStampMany2oneP;

    public TimeStampMany2oneC() {
    }


    @Id 
    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`TimeStampId`", length=19)
    public Date getTimeStampId() {
        return this.timeStampId;
    }
    
    public void setTimeStampId(Date timeStampId) {
        this.timeStampId = timeStampId;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`TimeStampCol`")
    public TimeStampMany2oneP getTimeStampMany2oneP() {
        return this.timeStampMany2oneP;
    }
    
    public void setTimeStampMany2oneP(TimeStampMany2oneP timeStampMany2oneP) {
        this.timeStampMany2oneP = timeStampMany2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof TimeStampMany2oneC) )
		    return false;

		 TimeStampMany2oneC that = (TimeStampMany2oneC) o;

		 return ( (this.getTimeStampId()==that.getTimeStampId()) || ( this.getTimeStampId()!=null && that.getTimeStampId()!=null && this.getTimeStampId().equals(that.getTimeStampId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getTimeStampId() == null ? 0 : this.getTimeStampId().hashCode() );

         return result;
    }


}

