/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * CharOne2oneC generated by hbm2java
 */
@Entity
@Table(name="`Char_One2One_C`"
)

public class CharOne2oneC  implements java.io.Serializable {

    
    private Character charId;
    
    private Character char1;
    
    private CharOne2oneP charOne2oneP;

    public CharOne2oneC() {
    }


    @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="charOne2oneP"))@Id @GeneratedValue(generator="generator")
    

    @Column(name="`CharID`", length=1)
    public Character getCharId() {
        return this.charId;
    }
    
    public void setCharId(Character charId) {
        this.charId = charId;
    }

    

    @Column(name="`Char1`", length=1)
    public Character getChar1() {
        return this.char1;
    }
    
    public void setChar1(Character char1) {
        this.char1 = char1;
    }

    @OneToOne(fetch=FetchType.EAGER) @PrimaryKeyJoinColumn
    public CharOne2oneP getCharOne2oneP() {
        return this.charOne2oneP;
    }
    
    public void setCharOne2oneP(CharOne2oneP charOne2oneP) {
        this.charOne2oneP = charOne2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof CharOne2oneC) )
		    return false;

		 CharOne2oneC that = (CharOne2oneC) o;

		 return ( (this.getCharId()==that.getCharId()) || ( this.getCharId()!=null && that.getCharId()!=null && this.getCharId().equals(that.getCharId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getCharId() == null ? 0 : this.getCharId().hashCode() );

         return result;
    }


}

