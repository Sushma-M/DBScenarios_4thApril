/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * ByteMany2oneP generated by hbm2java
 */
@Entity
@Table(name="`Byte_Many2One_P`"
)

public class ByteMany2oneP  implements java.io.Serializable {

    
    private Byte byteId;
    
    private Byte byteCol1;
    
    private Set<ByteMany2oneC> byteMany2oneCs = new HashSet<ByteMany2oneC>(0);

    public ByteMany2oneP() {
    }


    @Id 
    

    @Column(name="`ByteID`", precision=2)
    public Byte getByteId() {
        return this.byteId;
    }
    
    public void setByteId(Byte byteId) {
        this.byteId = byteId;
    }

    

    @Column(name="`ByteCol1`", precision=2)
    public Byte getByteCol1() {
        return this.byteCol1;
    }
    
    public void setByteCol1(Byte byteCol1) {
        this.byteCol1 = byteCol1;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="byteMany2oneP")
    public Set<ByteMany2oneC> getByteMany2oneCs() {
        return this.byteMany2oneCs;
    }
    
    public void setByteMany2oneCs(Set<ByteMany2oneC> byteMany2oneCs) {
        this.byteMany2oneCs = byteMany2oneCs;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof ByteMany2oneP) )
		    return false;

		 ByteMany2oneP that = (ByteMany2oneP) o;

		 return ( (this.getByteId()==that.getByteId()) || ( this.getByteId()!=null && that.getByteId()!=null && this.getByteId().equals(that.getByteId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getByteId() == null ? 0 : this.getByteId().hashCode() );

         return result;
    }


}

