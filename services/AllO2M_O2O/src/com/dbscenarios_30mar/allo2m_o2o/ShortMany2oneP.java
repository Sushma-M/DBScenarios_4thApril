/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * ShortMany2oneP generated by hbm2java
 */
@Entity
@Table(name="`Short_Many2One_P`"
)

public class ShortMany2oneP  implements java.io.Serializable {

    
    private Short shortId;
    
    private Short shortCol1;
    
    private Set<ShortMany2oneC> shortMany2oneCs = new HashSet<ShortMany2oneC>(0);

    public ShortMany2oneP() {
    }


    @Id 
    

    @Column(name="`ShortID`", precision=5)
    public Short getShortId() {
        return this.shortId;
    }
    
    public void setShortId(Short shortId) {
        this.shortId = shortId;
    }

    

    @Column(name="`ShortCol1`", precision=5)
    public Short getShortCol1() {
        return this.shortCol1;
    }
    
    public void setShortCol1(Short shortCol1) {
        this.shortCol1 = shortCol1;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="shortMany2oneP")
    public Set<ShortMany2oneC> getShortMany2oneCs() {
        return this.shortMany2oneCs;
    }
    
    public void setShortMany2oneCs(Set<ShortMany2oneC> shortMany2oneCs) {
        this.shortMany2oneCs = shortMany2oneCs;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof ShortMany2oneP) )
		    return false;

		 ShortMany2oneP that = (ShortMany2oneP) o;

		 return ( (this.getShortId()==that.getShortId()) || ( this.getShortId()!=null && that.getShortId()!=null && this.getShortId().equals(that.getShortId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getShortId() == null ? 0 : this.getShortId().hashCode() );

         return result;
    }


}

