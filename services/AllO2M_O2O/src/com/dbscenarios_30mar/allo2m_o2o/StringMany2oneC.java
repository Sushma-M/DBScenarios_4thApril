/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * StringMany2oneC generated by hbm2java
 */
@Entity
@Table(name="`String_Many2One_C`"
)

public class StringMany2oneC  implements java.io.Serializable {

    
    private String stringId;
    
    private StringMany2oneP stringMany2oneP;

    public StringMany2oneC() {
    }


    @Id 
    

    @Column(name="`StringID`")
    public String getStringId() {
        return this.stringId;
    }
    
    public void setStringId(String stringId) {
        this.stringId = stringId;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`StringCol1`")
    public StringMany2oneP getStringMany2oneP() {
        return this.stringMany2oneP;
    }
    
    public void setStringMany2oneP(StringMany2oneP stringMany2oneP) {
        this.stringMany2oneP = stringMany2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof StringMany2oneC) )
		    return false;

		 StringMany2oneC that = (StringMany2oneC) o;

		 return ( (this.getStringId()==that.getStringId()) || ( this.getStringId()!=null && that.getStringId()!=null && this.getStringId().equals(that.getStringId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getStringId() == null ? 0 : this.getStringId().hashCode() );

         return result;
    }


}

