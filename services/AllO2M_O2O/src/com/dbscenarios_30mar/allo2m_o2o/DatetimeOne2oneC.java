/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * DatetimeOne2oneC generated by hbm2java
 */
@Entity
@Table(name="`Datetime_One2One_C`"
)

public class DatetimeOne2oneC  implements java.io.Serializable {

    
    
    @Type(type="DateTime")
    private LocalDateTime datetimeId;
    
    
    @Type(type="DateTime")
    private LocalDateTime datetime;
    
    private DatetimeOne2oneP datetimeOne2oneP;

    public DatetimeOne2oneC() {
    }


    @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="datetimeOne2oneP"))@Id @GeneratedValue(generator="generator")
    

    @Column(name="`DatetimeID`")
    public LocalDateTime getDatetimeId() {
        return this.datetimeId;
    }
    
    public void setDatetimeId(LocalDateTime datetimeId) {
        this.datetimeId = datetimeId;
    }

    

    @Column(name="`Datetime`")
    public LocalDateTime getDatetime() {
        return this.datetime;
    }
    
    public void setDatetime(LocalDateTime datetime) {
        this.datetime = datetime;
    }

    @OneToOne(fetch=FetchType.EAGER) @PrimaryKeyJoinColumn
    public DatetimeOne2oneP getDatetimeOne2oneP() {
        return this.datetimeOne2oneP;
    }
    
    public void setDatetimeOne2oneP(DatetimeOne2oneP datetimeOne2oneP) {
        this.datetimeOne2oneP = datetimeOne2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof DatetimeOne2oneC) )
		    return false;

		 DatetimeOne2oneC that = (DatetimeOne2oneC) o;

		 return ( (this.getDatetimeId()==that.getDatetimeId()) || ( this.getDatetimeId()!=null && that.getDatetimeId()!=null && this.getDatetimeId().equals(that.getDatetimeId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getDatetimeId() == null ? 0 : this.getDatetimeId().hashCode() );

         return result;
    }


}

