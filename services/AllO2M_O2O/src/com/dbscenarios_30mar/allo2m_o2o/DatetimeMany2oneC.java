/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.dbscenarios_30mar.allo2m_o2o;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * DatetimeMany2oneC generated by hbm2java
 */
@Entity
@Table(name="`Datetime_Many2One_C`"
)

public class DatetimeMany2oneC  implements java.io.Serializable {

    
    
    @Type(type="DateTime")
    private LocalDateTime datetimeId;
    
    private DatetimeMany2oneP datetimeMany2oneP;

    public DatetimeMany2oneC() {
    }


    @Id 
    

    @Column(name="`DatetimeID`")
    public LocalDateTime getDatetimeId() {
        return this.datetimeId;
    }
    
    public void setDatetimeId(LocalDateTime datetimeId) {
        this.datetimeId = datetimeId;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`Datetime`")
    public DatetimeMany2oneP getDatetimeMany2oneP() {
        return this.datetimeMany2oneP;
    }
    
    public void setDatetimeMany2oneP(DatetimeMany2oneP datetimeMany2oneP) {
        this.datetimeMany2oneP = datetimeMany2oneP;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof DatetimeMany2oneC) )
		    return false;

		 DatetimeMany2oneC that = (DatetimeMany2oneC) o;

		 return ( (this.getDatetimeId()==that.getDatetimeId()) || ( this.getDatetimeId()!=null && that.getDatetimeId()!=null && this.getDatetimeId().equals(that.getDatetimeId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getDatetimeId() == null ? 0 : this.getDatetimeId().hashCode() );

         return result;
    }


}

